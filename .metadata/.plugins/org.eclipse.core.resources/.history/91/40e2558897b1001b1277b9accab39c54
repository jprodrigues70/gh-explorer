package Query;

import java.util.Scanner;

import GitHubOutput.GitHubOutput;
import GitHubOutput.UserGitHubOutput;

public class UserQuery implements QueryInterface {
	private String location = "";
	private String language = "";
	private String search = "";
	private Scanner str = new Scanner(System.in);
	
	@Override
	public String getType() {
		return "Users";
	}

	public String getLocation() {
		return location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	public String getLanguage() {
		return language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Override
	public String getSearch() {
		return this.search;
	}

	@Override
	public void setSearch(String search) {
		this.search = search;
	}
	
	private void readLocation() {
		System.out.println("Você quer usuários de qual localização? ('N' para não especificar)");
		String location = str.nextLine();
		
		if (!location.equals("N")) {
			this.setLocation(location);
		}
	}
	
	private void readLanguage() {
		System.out.println("Você quer usuários que programem em qual linguagem? ('N' para não especificar)");
		String language = str.nextLine();
		
		if (!language.equals("N")) {			
			this.setLanguage(language);
		}
	}

	@Override
	public void askAndMount() {
		this.readLocation();
		this.readLanguage();
		return;
	}

	@Override
	public String getQuery() throws Exception {
		if (this.language.isBlank() && this.location.isBlank()) {
			throw new Exception("Você precisa informar uma linguagem ou localização.");
		} else if (this.language.isBlank()) {
			return "?q=location%3A" + this.location + "&type=" + this.getType() + "&ref=advsearch";
		} else if (this.location.isBlank()) {
			return "?q=language%3A" + this.language + "&type=" + this.getType() + "&ref=advsearch&l=" + this.language;
		}
		
		return "users?q=location%3A" + this.location + "language%3A" + this.language + "&type=" + this.getType() + "&ref=advsearch&l=" + this.language;
	}
	
	public GitHubOutput getExpectedOutput() {
		return new UserGitHubOutput();
	}
}
